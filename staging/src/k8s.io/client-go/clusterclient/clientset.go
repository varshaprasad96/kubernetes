//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright YEAR The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by kcp code-generator. DO NOT EDIT.

package clusterclient

import (
	"fmt"

	kcp "github.com/kcp-dev/apimachinery/pkg/client"
	"github.com/kcp-dev/logicalcluster"
	"k8s.io/client-go/discovery"
	"k8s.io/client-go/kubernetes"
	"k8s.io/client-go/rest"

	admissionregistrationv1client "k8s.io/client-go/clusterclient/typed/admissionregistration/v1"
	admissionregistrationv1 "k8s.io/client-go/kubernetes/typed/admissionregistration/v1"

	admissionregistrationv1beta1client "k8s.io/client-go/clusterclient/typed/admissionregistration/v1beta1"
	admissionregistrationv1beta1 "k8s.io/client-go/kubernetes/typed/admissionregistration/v1beta1"

	admissionv1client "k8s.io/client-go/clusterclient/typed/admission/v1"
	admissionv1 "k8s.io/client-go/kubernetes/typed/admission/v1"

	admissionv1beta1client "k8s.io/client-go/clusterclient/typed/admission/v1beta1"
	admissionv1beta1 "k8s.io/client-go/kubernetes/typed/admission/v1beta1"

	appsv1client "k8s.io/client-go/clusterclient/typed/apps/v1"
	appsv1 "k8s.io/client-go/kubernetes/typed/apps/v1"

	appsv1beta1client "k8s.io/client-go/clusterclient/typed/apps/v1beta1"
	appsv1beta1 "k8s.io/client-go/kubernetes/typed/apps/v1beta1"

	appsv1beta2client "k8s.io/client-go/clusterclient/typed/apps/v1beta2"
	appsv1beta2 "k8s.io/client-go/kubernetes/typed/apps/v1beta2"

	authenticationv1client "k8s.io/client-go/clusterclient/typed/authentication/v1"
	authenticationv1 "k8s.io/client-go/kubernetes/typed/authentication/v1"

	authenticationv1beta1client "k8s.io/client-go/clusterclient/typed/authentication/v1beta1"
	authenticationv1beta1 "k8s.io/client-go/kubernetes/typed/authentication/v1beta1"

	authorizationv1client "k8s.io/client-go/clusterclient/typed/authorization/v1"
	authorizationv1 "k8s.io/client-go/kubernetes/typed/authorization/v1"

	authorizationv1beta1client "k8s.io/client-go/clusterclient/typed/authorization/v1beta1"
	authorizationv1beta1 "k8s.io/client-go/kubernetes/typed/authorization/v1beta1"

	autoscalingv1client "k8s.io/client-go/clusterclient/typed/autoscaling/v1"
	autoscalingv1 "k8s.io/client-go/kubernetes/typed/autoscaling/v1"

	autoscalingv2client "k8s.io/client-go/clusterclient/typed/autoscaling/v2"
	autoscalingv2 "k8s.io/client-go/kubernetes/typed/autoscaling/v2"

	autoscalingv2beta1client "k8s.io/client-go/clusterclient/typed/autoscaling/v2beta1"
	autoscalingv2beta1 "k8s.io/client-go/kubernetes/typed/autoscaling/v2beta1"

	autoscalingv2beta2client "k8s.io/client-go/clusterclient/typed/autoscaling/v2beta2"
	autoscalingv2beta2 "k8s.io/client-go/kubernetes/typed/autoscaling/v2beta2"

	batchv1client "k8s.io/client-go/clusterclient/typed/batch/v1"
	batchv1 "k8s.io/client-go/kubernetes/typed/batch/v1"

	batchv1beta1client "k8s.io/client-go/clusterclient/typed/batch/v1beta1"
	batchv1beta1 "k8s.io/client-go/kubernetes/typed/batch/v1beta1"

	certificatesv1client "k8s.io/client-go/clusterclient/typed/certificates/v1"
	certificatesv1 "k8s.io/client-go/kubernetes/typed/certificates/v1"

	certificatesv1beta1client "k8s.io/client-go/clusterclient/typed/certificates/v1beta1"
	certificatesv1beta1 "k8s.io/client-go/kubernetes/typed/certificates/v1beta1"

	coordinationv1beta1client "k8s.io/client-go/clusterclient/typed/coordination/v1beta1"
	coordinationv1beta1 "k8s.io/client-go/kubernetes/typed/coordination/v1beta1"

	coordinationv1client "k8s.io/client-go/clusterclient/typed/coordination/v1"
	coordinationv1 "k8s.io/client-go/kubernetes/typed/coordination/v1"

	discoveryv1client "k8s.io/client-go/clusterclient/typed/discovery/v1"
	discoveryv1 "k8s.io/client-go/kubernetes/typed/discovery/v1"

	discoveryv1beta1client "k8s.io/client-go/clusterclient/typed/discovery/v1beta1"
	discoveryv1beta1 "k8s.io/client-go/kubernetes/typed/discovery/v1beta1"

	extensionsv1beta1client "k8s.io/client-go/clusterclient/typed/extensions/v1beta1"
	extensionsv1beta1 "k8s.io/client-go/kubernetes/typed/extensions/v1beta1"

	eventsv1client "k8s.io/client-go/clusterclient/typed/events/v1"
	eventsv1 "k8s.io/client-go/kubernetes/typed/events/v1"

	eventsv1beta1client "k8s.io/client-go/clusterclient/typed/events/v1beta1"
	eventsv1beta1 "k8s.io/client-go/kubernetes/typed/events/v1beta1"

	imagepolicyv1alpha1client "k8s.io/client-go/clusterclient/typed/imagepolicy/v1alpha1"
	imagepolicyv1alpha1 "k8s.io/client-go/kubernetes/typed/imagepolicy/v1alpha1"

	networkingv1client "k8s.io/client-go/clusterclient/typed/networking/v1"
	networkingv1 "k8s.io/client-go/kubernetes/typed/networking/v1"

	networkingv1beta1client "k8s.io/client-go/clusterclient/typed/networking/v1beta1"
	networkingv1beta1 "k8s.io/client-go/kubernetes/typed/networking/v1beta1"

	nodev1client "k8s.io/client-go/clusterclient/typed/node/v1"
	nodev1 "k8s.io/client-go/kubernetes/typed/node/v1"

	nodev1alpha1client "k8s.io/client-go/clusterclient/typed/node/v1alpha1"
	nodev1alpha1 "k8s.io/client-go/kubernetes/typed/node/v1alpha1"

	nodev1beta1client "k8s.io/client-go/clusterclient/typed/node/v1beta1"
	nodev1beta1 "k8s.io/client-go/kubernetes/typed/node/v1beta1"

	policyv1client "k8s.io/client-go/clusterclient/typed/policy/v1"
	policyv1 "k8s.io/client-go/kubernetes/typed/policy/v1"

	policyv1beta1client "k8s.io/client-go/clusterclient/typed/policy/v1beta1"
	policyv1beta1 "k8s.io/client-go/kubernetes/typed/policy/v1beta1"

	rbacv1client "k8s.io/client-go/clusterclient/typed/rbac/v1"
	rbacv1 "k8s.io/client-go/kubernetes/typed/rbac/v1"

	rbacv1beta1client "k8s.io/client-go/clusterclient/typed/rbac/v1beta1"
	rbacv1beta1 "k8s.io/client-go/kubernetes/typed/rbac/v1beta1"

	rbacv1alpha1client "k8s.io/client-go/clusterclient/typed/rbac/v1alpha1"
	rbacv1alpha1 "k8s.io/client-go/kubernetes/typed/rbac/v1alpha1"

	schedulingv1alpha1client "k8s.io/client-go/clusterclient/typed/scheduling/v1alpha1"
	schedulingv1alpha1 "k8s.io/client-go/kubernetes/typed/scheduling/v1alpha1"

	schedulingv1beta1client "k8s.io/client-go/clusterclient/typed/scheduling/v1beta1"
	schedulingv1beta1 "k8s.io/client-go/kubernetes/typed/scheduling/v1beta1"

	schedulingv1client "k8s.io/client-go/clusterclient/typed/scheduling/v1"
	schedulingv1 "k8s.io/client-go/kubernetes/typed/scheduling/v1"

	storagev1beta1client "k8s.io/client-go/clusterclient/typed/storage/v1beta1"
	storagev1beta1 "k8s.io/client-go/kubernetes/typed/storage/v1beta1"

	storagev1client "k8s.io/client-go/clusterclient/typed/storage/v1"
	storagev1 "k8s.io/client-go/kubernetes/typed/storage/v1"

	storagev1alpha1client "k8s.io/client-go/clusterclient/typed/storage/v1alpha1"
	storagev1alpha1 "k8s.io/client-go/kubernetes/typed/storage/v1alpha1"

	flowcontrolv1alpha1client "k8s.io/client-go/clusterclient/typed/flowcontrol/v1alpha1"
	flowcontrolv1alpha1 "k8s.io/client-go/kubernetes/typed/flowcontrol/v1alpha1"

	flowcontrolv1beta1client "k8s.io/client-go/clusterclient/typed/flowcontrol/v1beta1"
	flowcontrolv1beta1 "k8s.io/client-go/kubernetes/typed/flowcontrol/v1beta1"

	flowcontrolv1beta2client "k8s.io/client-go/clusterclient/typed/flowcontrol/v1beta2"
	flowcontrolv1beta2 "k8s.io/client-go/kubernetes/typed/flowcontrol/v1beta2"

	apiserverinternalv1alpha1client "k8s.io/client-go/clusterclient/typed/apiserverinternal/v1alpha1"
	apiserverinternalv1alpha1 "k8s.io/client-go/kubernetes/typed/apiserverinternal/v1alpha1"

	corev1client "k8s.io/client-go/clusterclient/typed/core/v1"
	corev1 "k8s.io/client-go/kubernetes/typed/core/v1"
)

// NewForConfig creates a new ClusterClient for the given config.
// It uses a custom round tripper that wraps the given client's
// endpoint. The clientset returned from NewForConfig is kcp
// cluster-aware.
func NewForConfig(config *rest.Config) (*ClusterClient, error) {
	client, err := rest.HTTPClientFor(config)
	if err != nil {
		return nil, fmt.Errorf("error creating HTTP client: %w", err)
	}

	clusterRoundTripper := kcp.NewClusterRoundTripper(client.Transport)
	client.Transport = clusterRoundTripper

	delegate, err := kubernetes.NewForConfigAndClient(config, client)
	if err != nil {
		return nil, fmt.Errorf("error creating delegate clientset: %w", err)
	}

	return &ClusterClient{
		delegate: delegate,
	}, nil
}

// ClusterClient wraps the underlying interface.
type ClusterClient struct {
	delegate kubernetes.Interface
}

// Cluster returns a wrapped interface scoped to a particular cluster.
func (c *ClusterClient) Cluster(cluster logicalcluster.Name) kubernetes.Interface {
	return &wrappedInterface{
		cluster:  cluster,
		delegate: c.delegate,
	}
}

type wrappedInterface struct {
	cluster  logicalcluster.Name
	delegate kubernetes.Interface
}

// Discovery retrieves the DiscoveryClient.
func (w *wrappedInterface) Discovery() discovery.DiscoveryInterface {
	return w.delegate.Discovery()
}

// AdmissionregistrationV1 retrieves the AdmissionregistrationV1Client.
func (w *wrappedInterface) AdmissionregistrationV1() admissionregistrationv1.AdmissionregistrationV1Interface {
	return admissionregistrationv1client.New(w.cluster, w.delegate.AdmissionregistrationV1())
}

// AdmissionregistrationV1beta1 retrieves the AdmissionregistrationV1beta1Client.
func (w *wrappedInterface) AdmissionregistrationV1beta1() admissionregistrationv1beta1.AdmissionregistrationV1beta1Interface {
	return admissionregistrationv1beta1client.New(w.cluster, w.delegate.AdmissionregistrationV1beta1())
}

// AdmissionV1 retrieves the AdmissionV1Client.
func (w *wrappedInterface) AdmissionV1() admissionv1.AdmissionV1Interface {
	return admissionv1client.New(w.cluster, w.delegate.AdmissionV1())
}

// AdmissionV1beta1 retrieves the AdmissionV1beta1Client.
func (w *wrappedInterface) AdmissionV1beta1() admissionv1beta1.AdmissionV1beta1Interface {
	return admissionv1beta1client.New(w.cluster, w.delegate.AdmissionV1beta1())
}

// AppsV1 retrieves the AppsV1Client.
func (w *wrappedInterface) AppsV1() appsv1.AppsV1Interface {
	return appsv1client.New(w.cluster, w.delegate.AppsV1())
}

// AppsV1beta1 retrieves the AppsV1beta1Client.
func (w *wrappedInterface) AppsV1beta1() appsv1beta1.AppsV1beta1Interface {
	return appsv1beta1client.New(w.cluster, w.delegate.AppsV1beta1())
}

// AppsV1beta2 retrieves the AppsV1beta2Client.
func (w *wrappedInterface) AppsV1beta2() appsv1beta2.AppsV1beta2Interface {
	return appsv1beta2client.New(w.cluster, w.delegate.AppsV1beta2())
}

// AuthenticationV1 retrieves the AuthenticationV1Client.
func (w *wrappedInterface) AuthenticationV1() authenticationv1.AuthenticationV1Interface {
	return authenticationv1client.New(w.cluster, w.delegate.AuthenticationV1())
}

// AuthenticationV1beta1 retrieves the AuthenticationV1beta1Client.
func (w *wrappedInterface) AuthenticationV1beta1() authenticationv1beta1.AuthenticationV1beta1Interface {
	return authenticationv1beta1client.New(w.cluster, w.delegate.AuthenticationV1beta1())
}

// AuthorizationV1 retrieves the AuthorizationV1Client.
func (w *wrappedInterface) AuthorizationV1() authorizationv1.AuthorizationV1Interface {
	return authorizationv1client.New(w.cluster, w.delegate.AuthorizationV1())
}

// AuthorizationV1beta1 retrieves the AuthorizationV1beta1Client.
func (w *wrappedInterface) AuthorizationV1beta1() authorizationv1beta1.AuthorizationV1beta1Interface {
	return authorizationv1beta1client.New(w.cluster, w.delegate.AuthorizationV1beta1())
}

// AutoscalingV1 retrieves the AutoscalingV1Client.
func (w *wrappedInterface) AutoscalingV1() autoscalingv1.AutoscalingV1Interface {
	return autoscalingv1client.New(w.cluster, w.delegate.AutoscalingV1())
}

// AutoscalingV2 retrieves the AutoscalingV2Client.
func (w *wrappedInterface) AutoscalingV2() autoscalingv2.AutoscalingV2Interface {
	return autoscalingv2client.New(w.cluster, w.delegate.AutoscalingV2())
}

// AutoscalingV2beta1 retrieves the AutoscalingV2beta1Client.
func (w *wrappedInterface) AutoscalingV2beta1() autoscalingv2beta1.AutoscalingV2beta1Interface {
	return autoscalingv2beta1client.New(w.cluster, w.delegate.AutoscalingV2beta1())
}

// AutoscalingV2beta2 retrieves the AutoscalingV2beta2Client.
func (w *wrappedInterface) AutoscalingV2beta2() autoscalingv2beta2.AutoscalingV2beta2Interface {
	return autoscalingv2beta2client.New(w.cluster, w.delegate.AutoscalingV2beta2())
}

// BatchV1 retrieves the BatchV1Client.
func (w *wrappedInterface) BatchV1() batchv1.BatchV1Interface {
	return batchv1client.New(w.cluster, w.delegate.BatchV1())
}

// BatchV1beta1 retrieves the BatchV1beta1Client.
func (w *wrappedInterface) BatchV1beta1() batchv1beta1.BatchV1beta1Interface {
	return batchv1beta1client.New(w.cluster, w.delegate.BatchV1beta1())
}

// CertificatesV1 retrieves the CertificatesV1Client.
func (w *wrappedInterface) CertificatesV1() certificatesv1.CertificatesV1Interface {
	return certificatesv1client.New(w.cluster, w.delegate.CertificatesV1())
}

// CertificatesV1beta1 retrieves the CertificatesV1beta1Client.
func (w *wrappedInterface) CertificatesV1beta1() certificatesv1beta1.CertificatesV1beta1Interface {
	return certificatesv1beta1client.New(w.cluster, w.delegate.CertificatesV1beta1())
}

// CoordinationV1beta1 retrieves the CoordinationV1beta1Client.
func (w *wrappedInterface) CoordinationV1beta1() coordinationv1beta1.CoordinationV1beta1Interface {
	return coordinationv1beta1client.New(w.cluster, w.delegate.CoordinationV1beta1())
}

// CoordinationV1 retrieves the CoordinationV1Client.
func (w *wrappedInterface) CoordinationV1() coordinationv1.CoordinationV1Interface {
	return coordinationv1client.New(w.cluster, w.delegate.CoordinationV1())
}

// DiscoveryV1 retrieves the DiscoveryV1Client.
func (w *wrappedInterface) DiscoveryV1() discoveryv1.DiscoveryV1Interface {
	return discoveryv1client.New(w.cluster, w.delegate.DiscoveryV1())
}

// DiscoveryV1beta1 retrieves the DiscoveryV1beta1Client.
func (w *wrappedInterface) DiscoveryV1beta1() discoveryv1beta1.DiscoveryV1beta1Interface {
	return discoveryv1beta1client.New(w.cluster, w.delegate.DiscoveryV1beta1())
}

// ExtensionsV1beta1 retrieves the ExtensionsV1beta1Client.
func (w *wrappedInterface) ExtensionsV1beta1() extensionsv1beta1.ExtensionsV1beta1Interface {
	return extensionsv1beta1client.New(w.cluster, w.delegate.ExtensionsV1beta1())
}

// EventsV1 retrieves the EventsV1Client.
func (w *wrappedInterface) EventsV1() eventsv1.EventsV1Interface {
	return eventsv1client.New(w.cluster, w.delegate.EventsV1())
}

// EventsV1beta1 retrieves the EventsV1beta1Client.
func (w *wrappedInterface) EventsV1beta1() eventsv1beta1.EventsV1beta1Interface {
	return eventsv1beta1client.New(w.cluster, w.delegate.EventsV1beta1())
}

// ImagepolicyV1alpha1 retrieves the ImagepolicyV1alpha1Client.
func (w *wrappedInterface) ImagepolicyV1alpha1() imagepolicyv1alpha1.ImagepolicyV1alpha1Interface {
	return imagepolicyv1alpha1client.New(w.cluster, w.delegate.ImagepolicyV1alpha1())
}

// NetworkingV1 retrieves the NetworkingV1Client.
func (w *wrappedInterface) NetworkingV1() networkingv1.NetworkingV1Interface {
	return networkingv1client.New(w.cluster, w.delegate.NetworkingV1())
}

// NetworkingV1beta1 retrieves the NetworkingV1beta1Client.
func (w *wrappedInterface) NetworkingV1beta1() networkingv1beta1.NetworkingV1beta1Interface {
	return networkingv1beta1client.New(w.cluster, w.delegate.NetworkingV1beta1())
}

// NodeV1 retrieves the NodeV1Client.
func (w *wrappedInterface) NodeV1() nodev1.NodeV1Interface {
	return nodev1client.New(w.cluster, w.delegate.NodeV1())
}

// NodeV1alpha1 retrieves the NodeV1alpha1Client.
func (w *wrappedInterface) NodeV1alpha1() nodev1alpha1.NodeV1alpha1Interface {
	return nodev1alpha1client.New(w.cluster, w.delegate.NodeV1alpha1())
}

// NodeV1beta1 retrieves the NodeV1beta1Client.
func (w *wrappedInterface) NodeV1beta1() nodev1beta1.NodeV1beta1Interface {
	return nodev1beta1client.New(w.cluster, w.delegate.NodeV1beta1())
}

// PolicyV1 retrieves the PolicyV1Client.
func (w *wrappedInterface) PolicyV1() policyv1.PolicyV1Interface {
	return policyv1client.New(w.cluster, w.delegate.PolicyV1())
}

// PolicyV1beta1 retrieves the PolicyV1beta1Client.
func (w *wrappedInterface) PolicyV1beta1() policyv1beta1.PolicyV1beta1Interface {
	return policyv1beta1client.New(w.cluster, w.delegate.PolicyV1beta1())
}

// RbacV1 retrieves the RbacV1Client.
func (w *wrappedInterface) RbacV1() rbacv1.RbacV1Interface {
	return rbacv1client.New(w.cluster, w.delegate.RbacV1())
}

// RbacV1beta1 retrieves the RbacV1beta1Client.
func (w *wrappedInterface) RbacV1beta1() rbacv1beta1.RbacV1beta1Interface {
	return rbacv1beta1client.New(w.cluster, w.delegate.RbacV1beta1())
}

// RbacV1alpha1 retrieves the RbacV1alpha1Client.
func (w *wrappedInterface) RbacV1alpha1() rbacv1alpha1.RbacV1alpha1Interface {
	return rbacv1alpha1client.New(w.cluster, w.delegate.RbacV1alpha1())
}

// SchedulingV1alpha1 retrieves the SchedulingV1alpha1Client.
func (w *wrappedInterface) SchedulingV1alpha1() schedulingv1alpha1.SchedulingV1alpha1Interface {
	return schedulingv1alpha1client.New(w.cluster, w.delegate.SchedulingV1alpha1())
}

// SchedulingV1beta1 retrieves the SchedulingV1beta1Client.
func (w *wrappedInterface) SchedulingV1beta1() schedulingv1beta1.SchedulingV1beta1Interface {
	return schedulingv1beta1client.New(w.cluster, w.delegate.SchedulingV1beta1())
}

// SchedulingV1 retrieves the SchedulingV1Client.
func (w *wrappedInterface) SchedulingV1() schedulingv1.SchedulingV1Interface {
	return schedulingv1client.New(w.cluster, w.delegate.SchedulingV1())
}

// StorageV1beta1 retrieves the StorageV1beta1Client.
func (w *wrappedInterface) StorageV1beta1() storagev1beta1.StorageV1beta1Interface {
	return storagev1beta1client.New(w.cluster, w.delegate.StorageV1beta1())
}

// StorageV1 retrieves the StorageV1Client.
func (w *wrappedInterface) StorageV1() storagev1.StorageV1Interface {
	return storagev1client.New(w.cluster, w.delegate.StorageV1())
}

// StorageV1alpha1 retrieves the StorageV1alpha1Client.
func (w *wrappedInterface) StorageV1alpha1() storagev1alpha1.StorageV1alpha1Interface {
	return storagev1alpha1client.New(w.cluster, w.delegate.StorageV1alpha1())
}

// FlowcontrolV1alpha1 retrieves the FlowcontrolV1alpha1Client.
func (w *wrappedInterface) FlowcontrolV1alpha1() flowcontrolv1alpha1.FlowcontrolV1alpha1Interface {
	return flowcontrolv1alpha1client.New(w.cluster, w.delegate.FlowcontrolV1alpha1())
}

// FlowcontrolV1beta1 retrieves the FlowcontrolV1beta1Client.
func (w *wrappedInterface) FlowcontrolV1beta1() flowcontrolv1beta1.FlowcontrolV1beta1Interface {
	return flowcontrolv1beta1client.New(w.cluster, w.delegate.FlowcontrolV1beta1())
}

// FlowcontrolV1beta2 retrieves the FlowcontrolV1beta2Client.
func (w *wrappedInterface) FlowcontrolV1beta2() flowcontrolv1beta2.FlowcontrolV1beta2Interface {
	return flowcontrolv1beta2client.New(w.cluster, w.delegate.FlowcontrolV1beta2())
}

// ApiserverinternalV1alpha1 retrieves the ApiserverinternalV1alpha1Client.
func (w *wrappedInterface) ApiserverinternalV1alpha1() apiserverinternalv1alpha1.ApiserverinternalV1alpha1Interface {
	return apiserverinternalv1alpha1client.New(w.cluster, w.delegate.ApiserverinternalV1alpha1())
}

// CoreV1 retrieves the CoreV1Client.
func (w *wrappedInterface) CoreV1() corev1.CoreV1Interface {
	return corev1client.New(w.cluster, w.delegate.CoreV1())
}
